#! /usr/bin/env janetsh

(import sh)

(os/setenv "HOME" "/tmp")
(when (not (sh/$?? cd ./.)) (error "fail"))
(when (not= (do (sh/$?? cd) (os/cwd)) (os/getenv "HOME")) (error "fail"))
(when (sh/$?? cd ./not-exists :2>/dev/null) (error "fail"))

(sh/$$_ alias x xxx)
(sh/$$_ alias y yyy)
(sh/alias z zzz)

# all aliases printed
(when (not= (sh/$$_? alias) ["alias x xxx\nalias y yyy\nalias z zzz" 0]) (error "fail"))

# only requested alias printed
(when (not= (sh/$$_? alias x) ["alias x xxx" 0]) (error "fail"))

# non-existing alias errs
(when (not= (sh/$$_? alias a :2>/dev/null) ["" 1]) (error "fail"))

# non-existing alias errs
(when (not= (sh/$$_? unalias a :2>/dev/null) ["" 1]) (error "fail"))

# still all aliases are present
(when (not= (sh/$$_? alias) ["alias x xxx\nalias y yyy\nalias z zzz" 0]) (error "fail"))

# errs because of non-existing while removing existing one
(when (not= (sh/$$_? unalias a z :2>/dev/null) ["" 1]) (error "fail"))

# the removed alias is not present
(when (not= (sh/$$_? alias) ["alias x xxx\nalias y yyy" 0]) (error "fail"))

# removes all aliases
(when (not= (sh/$$_? unalias -a) ["" 0]) (error "fail"))

# no aliases left
(when (not= (sh/$$_? alias) ["" 0]) (error "fail"))

(sh/alias foo echo foo bar)
(when (not= (sh/$$_? foo) ["foo bar" 0]) (error "fail"))


(def startd (os/cwd))
(sh/$ pushd "/tmp")
(sh/$ pushd "/tmp")
(when (not= (os/cwd) "/tmp") (error "fail"))
(when (not= (tuple ;sh/*dirs*) [startd "/tmp"]) (error "fail"))
(sh/$ popd)
(when (not= (os/cwd) "/tmp") (error "fail"))
(when (not= (tuple ;sh/*dirs*) [startd]) (error "fail"))
(sh/$ popd)
(when (not= (os/cwd) startd) (error "fail"))
(sh/$ pushd "/tmp")
(sh/$ popd -n)
(when (not= (os/cwd) "/tmp") (error "fail"))
(when (not= (tuple ;sh/*dirs*) []) (error "fail"))
(os/cd startd)


(sh/$ export FOO=bar BANG="BUZ" BAZ="" BONG= 3)
(when (not= [(os/getenv "FOO") (os/getenv "BANG") (os/getenv "BAZ") (os/getenv "BONG")]
            ["bar" "BUZ" "" "3"])
  (error "fail"))
(when (sh/$?? export FOO= :2>/dev/null) (error "fail"))
