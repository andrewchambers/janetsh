#! /usr/bin/env janetsh

(import sh)

(sh/$ true)

(try (do (sh/$ false) (error "fail") ) ([e] nil))

(when (not= (sh/$$ echo -n hello) "hello")
  (error "fail"))

(when (not= (sh/$$_ echo hello) "hello")
  (error "fail"))

(when (not= (sh/$$? echo hello) ["hello\n" 0] )
  (error "fail"))

(when (not= (sh/$$_? echo hello) ["hello" 0] )
  (error "fail"))

(when (not= (sh/$$_ echo @["hello" ["world"]] ) "hello world")
  (error "fail"))

(when (not= (sh/$$_ echo ["hello" @["world"]] ) "hello world")
  (error "fail"))

(when (not= (sh/$$_ echo (+ 1 2 3)) "6")
  (error "fail"))

(sh/$ echo hello1 :2> ./err.txt :1>'2)
(when (not= (string (slurp "err.txt")) "hello1\n")
 (error "fail"))

(sh/$ echo hello2 :2> ./err.txt :1>'2)
(when (not= (string (slurp "err.txt")) "hello2\n")
 (error "fail"))

(sh/$ echo hello3 > $PWD/out.txt)
(when (not= (string (slurp "out.txt")) "hello3\n")
 (error "fail"))

(sh/$ echo hello4 >$PWD/out.txt)
(when (not= (string (slurp "out.txt")) "hello4\n")
 (error "fail"))

(when (not= (sh/$? sh -c "exit 3") 3)
  (error "fail"))

(when (not (sh/$?? true))
  (error "fail"))

(when (sh/$?? false)
  (error "fail"))

(def j1 (sh/$ sleep "0.1" &))
(def j2 (sh/$ sleep "120" &))
(sh/wait-for-job j1)
(sh/terminate-all-jobs)
(sh/wait-for-job j2)


(sh/$ FOO=123 BAR="456" BAZ= abc 
  (fn [&]
    (when (not= (os/getenv "FOO") "123") (error "fail1"))
    (when (not= (os/getenv "BAR") "456") (error "fail2"))
    (when (not= (os/getenv "BAZ") "abc") (error "fail3"))))

(sh/$ FOO=456 true | FOO=123 BAR="456" BAZ= abc 
  (fn [&]
    (when (not= (os/getenv "FOO") "123") (error "fail"))
    (when (not= (os/getenv "BAR") "456") (error "fail"))
    (when (not= (os/getenv "BAZ") "abc") (error "fail"))))

